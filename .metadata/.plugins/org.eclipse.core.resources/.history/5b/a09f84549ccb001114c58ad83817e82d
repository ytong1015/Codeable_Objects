package com.ornament.lsys;

import java.util.Vector;

import processing.core.PApplet;
import com.datatype.Point;
import com.ornament.Pattern;
import com.primitive2d.Ellipse;
import com.primitive2d.Line;
import com.primitive2d.LineCollection;
import com.primitive2d.Polygon;
import com.primitive2d.Drawable;
import com.primitive2d.TurtleStruct;



public class LTurtle {

	  String todo;
	  double len;
	  float theta;

	  Point turtlePos;
	  double turtleRot;

	  public LTurtle(String s, float l, float t, Pattern parent) {
	    todo = s;
	    len = l; 
	    theta = t;
	    
	    turtleRot =0;
	    turtlePos = TurtleStruct.location;
	  } 


	  public void render() {
		  System.out.println("render");
		    for (int i = 0; i < todo.length(); i++) {
		      char c = todo.charAt(i);
		      if (c == 'F' || c == 'G') {
		    	TurtleStruct.pen = true;
		        forward(len);
		        TurtleStruct.location = new Point(len,0);
		        TurtleStruct.pen = false;
		        forward(len);
		        
		      } 
		      else if (c == '+') {
		    	 TurtleStruct.angle += theta;
		    	 right(Math.toDegrees(theta));
		    	 
		      } 
		      else if (c == '-') {
		    	 TurtleStruct.angle += -theta;
		    	 left(Math.toDegrees(theta));
		      } 
		      
		      else if (c == '[') {
		        turtlePos = TurtleStruct.location;
		        turtleRot = TurtleStruct.angle;
		      } 
		      else if (c == ']') {
	            TurtleStruct.location = turtlePos;
	            TurtleStruct.angle = turtleRot;
		      }
		    	  
		    } 
		  }
	  
	  
	  void setLen(double l) {
	    len = l; 
	  } 

	  void changeLen(double percent) {
	    len *= percent; 
	  }

	  void setToDo(String s) {
	    todo = s; 
	  }

	}



